AWSTemplateFormatVersion: 2010-09-09
Description: Spam Email Detector AWS
Parameters:
  EndPointName:
    Description: 'AWS Sage maker endpoint'
    Type: String

  S3EmailBucket:
    Description: 'Name of unique S3 bucket to be created'
    Type: String

Resources:
  S3Bucket:
    Type: AWS::S3::Bucket
    DependsOn: LambdaEmailCloudFormation
    Properties:
      BucketName: !Ref S3EmailBucket
      AccessControl: PublicRead
      NotificationConfiguration:
        LambdaConfigurations:
          - Event: s3:ObjectCreated:Put
            Function: !GetAtt [LambdaEmailCloudFormation, Arn]
    DeletionPolicy: Retain
  BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: PublicReadForGetBucketObjects
            Effect: Allow
            Principal: '*'
            Action: '*'
            Resource: !Join
              - ''
              - - 'arn:aws:s3:::'
                - !Ref S3Bucket
                - /*
      Bucket: !Ref S3Bucket
  LambdaInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !GetAtt LambdaEmailCloudFormation.Arn
      Action: 'lambda:InvokeFunction'
      Principal: s3.amazonaws.com
      SourceAccount: !Ref 'AWS::AccountId'
      SourceArn: !Sub 'arn:aws:s3:::${S3EmailBucket}'
  EmailLambdaRoleCloudFormation:
    Type: AWS::IAM::Role
    Properties:
      RoleName:
        Fn::Sub: emaillambdacloudformation-role
      AssumeRolePolicyDocument:
        Statement:
          - Action:
              - sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
        Version: 2012-10-17
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSLambdaExecute
        - arn:aws:iam::aws:policy/AmazonS3FullAccess
        - arn:aws:iam::aws:policy/AmazonSESFullAccess
        - arn:aws:iam::aws:policy/AmazonSageMakerFullAccess
      Path: /
  LambdaEmailCloudFormation:
    Type: 'AWS::Lambda::Function'
    Properties:
      Code:
        S3Bucket: lambda-store-nyu
        S3Key: spam-lf1.zip
      Description: lambda function for email body
      Environment:
        Variables:
          ENDPOINT_NAME: !Ref EndPointName
      FunctionName: email_lambda_cloudformation
      Handler: lambda_function.lambda_handler
      MemorySize: 512
      Role:
        Fn::GetAtt:
          - EmailLambdaRoleCloudFormation
          - Arn
      Runtime: python3.8
      Timeout: 60
  SESRuleSet:
    Type: 'AWS::SES::ReceiptRuleSet'
  SESRule:
    Type: 'AWS::SES::ReceiptRule'
    DependsOn: S3Bucket
    Properties:
      Rule:
        Actions:
          - S3Action:
              BucketName: !Ref S3EmailBucket
        Enabled: true
        ScanEnabled: false
      RuleSetName: !Ref SESRuleSet
